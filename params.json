{"name":"Dependency-mediator","tagline":"Concentrated on solving java component conflict or incompatible !","body":"# Dependency mediator project\r\n\r\n##### Unlike karaf and other lightness OSGI solutions,dependency mediator focus on shooting the conflict or incompatible problems before the runtime(try to remedy some unexpected exceptions or errors),also it can help you find the compatible problem between any two java component.\r\n##### Nowadays,I have provided one maven plugin.but in my opinion,integration with the maven standard enforcer plugin may be a better choice, i would try in the near future. \r\n \r\n## Features\r\n###### 1.Compatible with maven 3.x.x plugin programming model\r\n###### 2.Compatible with JDK 6+\r\n###### 3.Support directory scan,including classpath\r\n###### 4.Support component scan,including jar,war,ear,sar and so on\r\n###### 5.Support duplicate classes scan,duplicate means the same fully-qualified class name, but not the same digest or incompatible class(details see [jls](http://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html) and [class compatibility](http://www.oracle.com/technetwork/java/javase/compatibility-137541.html))\r\n\r\n\r\n\r\n## Available version\r\n###### 1.1.0 will release on 2014.11.08\r\n###### Optimize - less code,more things;\r\n###### Feature - Abstract version incompatible algorithm,support customized version diff strategy;\r\n###### Feature - Support duplicate incompatible class scan\r\n \r\n###### 1.0.0 release on 2014.10.08\r\n###### Feature - Compatible with JDK 6+,maven 2.2.x and 3.x.x plugin programming model;\r\n###### Feature - Core module support directory scan,also including classpath if you set property scanClasspath;\r\n###### Feature - Maven plugin support war and jar package type scan;\r\n###### Feature - Support duplicate digest classes scan\r\n\r\n## How to Use\r\n\r\n### Maven plugin(Compatible with maven 3.x.x)\r\n\t<plugin>\r\n\t\t<groupId>com.creative.studio.component</groupId>\r\n\t\t<artifactId>dependency-mediator-maven-plugin</artifactId>\r\n\t\t<version>1.0.0</version>\r\n\t</plugin>\r\n\r\nyou can also add plugin's groupId to the list of groupIds searched by default. To do this, you need to add the following to your ${user.home}/.m2/settings.xml file:\r\n\r\n    <pluginGroups>\r\n       <pluginGroup>com.creative.studio.component</pluginGroup>\r\n    </pluginGroups>\r\n\r\nfinally,you can run the mojo with ***mvn mediator:check***\r\n\r\n\r\n### Standalone \r\nAfter import the following jar\r\n\r\n    <dependency>\r\n       <groupId>com.creative.studio.component</groupId>\r\n\t   <artifactId>dependency-mediator-core</artifactId>\r\n\t   <version>1.0.0-SNAPSHOT</version>\r\n\t</dependency>\r\n\t\r\nYou can invoke the command ***mvn exec:java -Dexec.args=\"scanWhere -DscanClasspath\"*** in maven project or invoke class DependencyMediator\r\n## Usecase\r\nOutput may be like this if you use standalone mode:\r\n   \r\n    Output component reactor info......\r\n    Duplicated component  [com.alibaba.rocketmq.storm.MessageConsumer] was founded in the  path : \r\n \t    /home/von/workspace/rocketmq-storm/dd/rocketmq-storm-1.0.0-SNAPSHOT-11/com/alibaba/rocketmq/storm/MessageConsumer.class\r\n \t    /home/von/workspace/rocketmq-storm/dd/rocketmq-storm-1.0.0-SNAPSHOT/com/alibaba/rocketmq/storm/MessageConsumer.class\r\n \t    \r\n \t    \r\nBut if you using maven plugin,ouput may be like this:\r\n\r\n    [WARNING] Founded conflict dependency components:org.apache.commons:commons-lang3:jar\r\n     Resolved version is org.apache.commons:commons-lang3:jar:3.1:compile\r\n     But found conflict artifact org.apache.commons:commons-lang3:3.3.2\r\n    [WARNING] Founded conflict dependency components:org.apache.thrift:libthrift:jar\r\n     Resolved version is org.apache.thrift:libthrift:jar:0.8.0:compile\r\n     But found conflict artifact org.apache.thrift:libthrift:0.9.1\r\n\r\n\r\n## Background \r\n\r\nAs we know,when we are building a web project,we often use maven dependency plugin(if maven project) to solve jar conflict,such as:mvn dependency:tree -Dverbose -Dincludes=commons-collections,\r\nbut if we build our project to war package according with Java EE specification.we always have nothing to do but with the naked eye to lookup some underlying conflict jar packages.of course,which \r\ndepend on Java EE container classloader's class loading mechanism.\r\n\r\nNow,dependency mediator can help you to solve this problem,if you have better idea or improving suggestion,please contact [me](fengjia10@gmail.com)\r\n","google":"UA-55583532-1","note":"Don't delete this file! It's used internally to help with page regeneration."}